знову рефакторінг

Создали  LatestNews.jsx

const LatestNews = ({ banners, isLoading }) => {
    return (
        <section className={styles.section}>
            <BannersList banners={banners} isLoading={isLoading} />
        </section>
    )
}

export default LatestNews;

Создали BannersList.jsx

const BannersList = ({ banners }) => {
    return (
        <ul className={styles.banners}>
            {banners?.map(banner => {
                return(
                    <NewsBanner key={banner.id} item={banner}/>   // оце banner береться з Апі
                )
            })}
        </ul>
    )
}

const BannersListWithSkeleton = withSkeleton(BannersList, 'banner', 10, 'row')


export default BannersListWithSkeleton;

А в середині компонента шо була NewsBanner.jsx

const NewsBanner = ({ item }) => {
    return (
        <div className={styles.banner}>
            <Image image={item?.image} />
            <h3 className={styles.title}>{item.title}</h3>
            <p className={styles.extra}>{formatTimeAgo(item.published)} by {item.author}</p>
        </div>
    )
}

export default NewsBanner;

Ітого нашо аж 3 компонєнти зробили однакові я не зовсім догнав.. в самому низу просто баннери, посередині воно підключає скєлєтон, в зверху оцей файл просто вставляється

в Main <LatestNews isLoading={isLoading} banners={data && data.news} />
там вже було

    const { data, isLoading } = useFetch(getNews, {
        // page_number: currentPage,
        // page_size: PAGE_SIZE,
        // category: selectedCategory === "All" ? null : selectedCategory,
        ...filters,   // фільтри це те шо зверху було до цього
        keywords: debouncedKeywords,
    })

з Main перетягнули більшу частину кода в NewsByFilters 


const NewsByFilters = ({ filters, changeFilter, isLoading, news }) => {


    const handleNextPage = () => {
        if (filters.page_number < TOTAL_PAGES) {
            changeFilter('page_number', filters.page_number + 1)
        }
    }
    const handlePreviousPage = () => {
        if (filters.page_number > 1) {
            changeFilter('page_number', filters.page_number - 1)
        }
    }
    const handlePageClick = (pageNumber) => {
        changeFilter('page_Number', pageNumber)
    }

    return (
        <section className={styles.section}>

            <NewsFilters filters={filters} changeFilter={changeFilter} />

            <Pagination handleNextPage={handleNextPage} handlePreviousPage={handlePreviousPage} handlePageClick={handlePageClick} totalPages={TOTAL_PAGES} currentPage={filters.page_number} />

            <NewsList isLoading={isLoading} news={news} />

            <Pagination handleNextPage={handleNextPage} handlePreviousPage={handlePreviousPage} handlePageClick={handlePageClick} totalPages={TOTAL_PAGES} currentPage={filters.page_number} />
        </section>
    )
}

export default NewsByFilters;


в Main 
<NewsByFilters news={data?.news} isLoading={isLoading}  filters={filters} changeFilter={changeFilter}/>


В старому файлі Скєлєтона добавили direction

const Skeleton = ({ count = 1, type = 'banner', direction = 'column' }) => {
<ul className={direction === 'column' ? styles.columnList : styles.rowList}>  // тіпа добавили стілі під малі і великі екрани

там де файл withSkeleton добавили direction

function withSkeleton(Component, type, count, direction) {
return <Skeleton type={type} count={count} direction={direction} /> 


Создали  NewsFilters, куди закінули 2 компоненти категорій і пошуку з Main і вставили в компоненту докучі в NewsByFilters 

const NewsFilters = ({ filters, changeFilter }) => {

    const { data: dataCategories } = useFetch(getCategories);

    return (
        <div className={styles.filters}>
            {dataCategories ? <Categories categories={dataCategories.categories} selectedCategory={filters.category} setSelectedCategory={(category) => changeFilter('category', category)} /> : null}
            <Search keywords={filters.keywords} setKeywords={(keywords) => changeFilter('keywords', keywords)} />

        </div>
    )
}

export default NewsFilters;